version: 2.1
orbs:
  node: circleci/node@5
  browser-tools: circleci/browser-tools@1.2.3
jobs:
  lint:
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Run lint
          command: npm run lint
  unit-tests:
    # Install node dependencies and run tests
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Print node install help instructions
          command: |-
            echo "One cause for node package install failure is if you have private repositories that it can't reach
            One way to fix this for private npm packages:
              1. Use the npm CLI's \"login\" command to create a token (usually saved in your user's \"~/.npmrc\" file)
                For more info, see https://circleci.com/blog/publishing-npm-packages-using-circleci-2-0/#:~:text=set%20the%20%24npm_token%20environment%20variable%20in%20circleci
              2. Add a NPM_TOKEN to an org context
                For info on how to use contexts, see https://circleci.com/docs/contexts/
              3. Add a .circleci/config.yml to your repository or use this config.yml as a starting template
              4. Configure the jobs to use the context that includes NPM_TOKEN
              5. Add a step to inject your NPM_TOKEN environment variable into npm before \"install-packages\"
                For an example, see https://circleci.com/blog/publishing-npm-packages-using-circleci-2-0/#:~:text=the%20deploy%20job%20has%20several%20steps%20that%20run%20to%20authenticate%20with%20and%20publish%20to"
          when: on_fail
      - run:
          name: Run unit tests
          command: npm run test:unit --passWithNoTests
  e2e-tests:
    docker:
      - image: mcr.microsoft.com/playwright:v1.40.0-jammy
    steps:
      - checkout
      - run:
          name: Install Playwright
          command: |
              npm i -D @playwright/test
              npx playwright install
      - run:
          name: Install browsers
          command: npx playwright install chrome
      - run:
          name: Run end-to-end
          command:  npm run test:e2e
      - store_artifacts:
          path: test/e2e/reports
          destination: test-results
      - store_artifacts:
          path: ./videos
          destination: videos
      - store_artifacts:
          path: ./error-screenshot.png
          destination: screenshots
  check-coverage:
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Install Dependencies
          command: npm i
      - run:
          name : check coverage
          command:  npm run coverage
      - store_artifacts:
          path: coverage
workflows:
  lint:
    jobs:
      - lint
  build-and-test:
    jobs:
      - unit-tests
      - e2e-tests
  check-coverage:
    jobs:
      - check-coverage
